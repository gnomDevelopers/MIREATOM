basePath: /
definitions:
  entities.CreateFormulaRequest:
    properties:
      title:
        type: string
      user_id:
        type: string
      value:
        type: string
    type: object
  entities.CreateFormulaResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      surname:
        type: string
      third_name:
        type: string
    type: object
  entities.CreateUserResponse:
    properties:
      access_token:
        type: string
      id:
        type: integer
      refresh_token:
        type: string
    type: object
  entities.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  entities.Formula:
    properties:
      id:
        type: integer
      title:
        type: string
      user_id:
        type: string
      value:
        type: string
    type: object
  entities.GetFormulaFromArticleResponse:
    properties:
      formula:
        type: string
    type: object
  entities.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entities.LoginUserResponse:
    properties:
      access_token:
        type: string
      id:
        type: integer
      refresh_token:
        type: string
    type: object
  entities.Message:
    properties:
      message:
        type: string
    type: object
  entities.UpdateFormulaRequest:
    properties:
      id:
        type: integer
      title:
        type: string
      value:
        type: string
    type: object
info:
  contact: {}
  title: Î£igma API
  version: "1.0"
paths:
  /article:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Upload file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get formulas from article
      tags:
      - article
  /formula:
    post:
      consumes:
      - application/json
      parameters:
      - description: formula data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateFormulaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateFormulaResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Create formula
      tags:
      - formula
    put:
      consumes:
      - application/json
      parameters:
      - description: formula data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateFormulaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Update formula
      tags:
      - formula
  /formula/file:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Upload file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: User  successfully logged in
          schema:
            items:
              $ref: '#/definitions/entities.GetFormulaFromArticleResponse'
            type: array
        "400":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get formulas from article
      tags:
      - formula
  /formula/id/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: formula id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Delete formula
      tags:
      - formula
    get:
      consumes:
      - application/json
      parameters:
      - description: formula id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Formula'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get formula by id
      tags:
      - formula
  /formula/user_id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Formula'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get formula by user id
      tags:
      - formula
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access and refresh tokens.
      parameters:
      - description: User  login credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User  successfully logged in
          schema:
            $ref: '#/definitions/entities.LoginUserResponse'
        "400":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: User login
      tags:
      - user
  /signup:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns access and refresh tokens.
      parameters:
      - description: User  signup information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User  successfully registered
          schema:
            $ref: '#/definitions/entities.CreateUserResponse'
        "400":
          description: User  already exists or invalid request payload
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: User signup
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
