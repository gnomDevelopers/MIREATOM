basePath: /
definitions:
  entities.ArticleInfo:
    properties:
      full_name:
        type: string
      id:
        type: integer
      science:
        type: string
      section:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  entities.CreateFormulaRequest:
    properties:
      title:
        type: string
      value:
        type: string
    type: object
  entities.CreateFormulaResponse:
    properties:
      id:
        type: integer
    type: object
  entities.CreateUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
  entities.CreateUserResponse:
    properties:
      access_token:
        type: string
      id:
        type: integer
      refresh_token:
        type: string
    type: object
  entities.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  entities.Formula:
    properties:
      id:
        type: integer
      title:
        type: string
      user_id:
        type: integer
      value:
        type: string
    type: object
  entities.FormulaHistory:
    properties:
      code_name:
        type: string
      created_at:
        type: string
      difference:
        type: string
      formula_id:
        type: integer
      hash:
        type: string
      id:
        type: integer
    type: object
  entities.GetFormulaFromArticleResponse:
    properties:
      formula:
        type: string
    type: object
  entities.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  entities.LoginUserResponse:
    properties:
      access_token:
        type: string
      id:
        type: integer
      refresh_token:
        type: string
    type: object
  entities.Message:
    properties:
      message:
        type: string
    type: object
  entities.UpdateArticleRequest:
    properties:
      id:
        type: integer
      science:
        type: string
      section:
        type: string
      title:
        type: string
    type: object
  entities.UpdateFormulaRequest:
    properties:
      id:
        type: integer
      title:
        type: string
      value:
        type: string
    type: object
  entities.UserData:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      surname:
        type: string
      third_name:
        type: string
    type: object
info:
  contact: {}
  title: Î£igma API
  version: "1.0"
paths:
  /article:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.ArticleInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get all articles
      tags:
      - article
  /article/file/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Article ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get articles file
      tags:
      - article
  /article/user_id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.ArticleInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get all articles
      tags:
      - article
  /auth/article:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Article title
        in: formData
        name: title
        required: true
        type: string
      - description: Science field
        in: formData
        name: science
        required: true
        type: string
      - description: Article section
        in: formData
        name: section
        required: true
        type: string
      - description: Upload file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create article
      tags:
      - article
    put:
      consumes:
      - application/json
      parameters:
      - description: formula data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateArticleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update article
      tags:
      - article
  /auth/article/file:
    put:
      consumes:
      - application/json
      parameters:
      - description: Article id
        in: formData
        name: id
        required: true
        type: string
      - description: Upload file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update article
      tags:
      - article
  /auth/article/id/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: article id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete article
      tags:
      - article
  /auth/formula:
    post:
      consumes:
      - application/json
      parameters:
      - description: formula data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateFormulaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.CreateFormulaResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create formula
      tags:
      - formula
    put:
      consumes:
      - application/json
      parameters:
      - description: formula data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.UpdateFormulaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update formula
      tags:
      - formula
  /auth/formula/id/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: formula id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete formula
      tags:
      - formula
  /auth/formula/id/{id}/commits:
    get:
      consumes:
      - application/json
      description: Fetches all commits associated with a given formula ID.
      parameters:
      - description: Formula ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of commits for the specified formula
          schema:
            items:
              $ref: '#/definitions/entities.FormulaHistory'
            type: array
        "400":
          description: Invalid formula ID
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Retrieve commits for a specific formula
      tags:
      - formula
  /formula/file:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Upload file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: User  successfully logged in
          schema:
            items:
              $ref: '#/definitions/entities.GetFormulaFromArticleResponse'
            type: array
        "400":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get formulas from article
      tags:
      - formula
  /formula/history/user/{id}/page/{number}:
    get:
      consumes:
      - application/json
      description: Returns a paginated list of formulas for a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: path
        name: number
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of formulas
          schema:
            items:
              $ref: '#/definitions/entities.Formula'
            type: array
        "400":
          description: Invalid ID or page number
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Retrieve formula history by user ID
      tags:
      - formula
  /formula/id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: formula id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Formula'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get formula by id
      tags:
      - formula
  /formula/user_id/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Formula'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Get formula by user id
      tags:
      - formula
  /login:
    get:
      consumes:
      - application/json
      description: Validates the JWT token from the Authorization header, extracts
        user ID, and generates a new access token.
      parameters:
      - description: Bearer JWT token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: New access token and user ID
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Missing auth token
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid auth header or token
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Authorization check
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns access and refresh tokens.
      parameters:
      - description: User  login credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User  successfully logged in
          schema:
            $ref: '#/definitions/entities.LoginUserResponse'
        "400":
          description: Invalid email or password
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: User login
      tags:
      - user
  /signup:
    post:
      consumes:
      - application/json
      description: Registers a new user and returns access and refresh tokens.
      parameters:
      - description: User  signup information
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/entities.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User  successfully registered
          schema:
            $ref: '#/definitions/entities.CreateUserResponse'
        "400":
          description: User  already exists or invalid request payload
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: User signup
      tags:
      - user
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Fetches user details from the database using the provided user
        ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User data retrieved successfully
          schema:
            $ref: '#/definitions/entities.UserData'
        "400":
          description: Invalid user ID format
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/entities.ErrorResponse'
      summary: Retrieve user data by ID
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
